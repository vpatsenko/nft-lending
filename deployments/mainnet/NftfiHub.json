{
  "address": "0xA7C134E0Ba7295ebbd396a7C6b03a0abFd3bf417",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "string[]",
          "name": "_contractKeys",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "_contractAddresses",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "contractKey",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "ContractUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptTransferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelTransferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_contractKey",
          "type": "bytes32"
        }
      ],
      "name": "getContract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rejectTransferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwnerCandidate",
          "type": "address"
        }
      ],
      "name": "requestTransferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_contractKey",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_contractAddress",
          "type": "address"
        }
      ],
      "name": "setContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_contractKeys",
          "type": "string[]"
        },
        {
          "internalType": "address[]",
          "name": "_contractAddresses",
          "type": "address[]"
        }
      ],
      "name": "setContracts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x34fdd87de48a0ebe4f9faae792781b61a4a283c4ba39cdfa46d7e2acca9287fc",
  "receipt": {
    "to": null,
    "from": "0x04b6B89768eB5224C3A488EFD49953d09693578e",
    "contractAddress": "0xA7C134E0Ba7295ebbd396a7C6b03a0abFd3bf417",
    "transactionIndex": 12,
    "gasUsed": "687194",
    "logsBloom": "0x
    "blockHash": "0xe1914469f0fac80c5b3fd4fe794f00d44152d57a4faaa9fc9f05a58dd77475aa",
    "transactionHash": "0x34fdd87de48a0ebe4f9faae792781b61a4a283c4ba39cdfa46d7e2acca9287fc",
    "logs": [
      {
        "transactionIndex": 12,
        "blockNumber": 20835434,
        "transactionHash": "0x34fdd87de48a0ebe4f9faae792781b61a4a283c4ba39cdfa46d7e2acca9287fc",
        "address": "0xA7C134E0Ba7295ebbd396a7C6b03a0abFd3bf417",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000004b6b89768eb5224c3a488efd49953d09693578e"
        ],
        "data": "0x",
        "logIndex": 82,
        "blockHash": "0xe1914469f0fac80c5b3fd4fe794f00d44152d57a4faaa9fc9f05a58dd77475aa"
      }
    ],
    "blockNumber": 20835434,
    "cumulativeGasUsed": "2975329",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x04b6B89768eB5224C3A488EFD49953d09693578e",
    [],
    []
  ],
  "numDeployments": 1,
  "solcInputHash": "bab281e5640fb4f8a58586b3f548739e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"_contractKeys\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_contractAddresses\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"contractKey\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"ContractUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptTransferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelTransferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_contractKey\",\"type\":\"bytes32\"}],\"name\":\"getContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rejectTransferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwnerCandidate\",\"type\":\"address\"}],\"name\":\"requestTransferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_contractKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"setContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_contractKeys\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"_contractAddresses\",\"type\":\"address[]\"}],\"name\":\"setContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NFTfi\",\"details\":\"Registry for the contracts supported by NFTfi protocol.\",\"events\":{\"ContractUpdated(bytes32,address)\":{\"params\":{\"contractAddress\":\"- Address of the contract.\",\"contractKey\":\"- Contract key e.g. bytes32('PERMITTED_NFTS').\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes `contracts` with a batch of permitted contracts\",\"params\":{\"_admin\":\"- Initial admin of this contract.\",\"_contractAddresses\":\"- Initial associated contract addresses.\",\"_contractKeys\":\"- Initial contract keys.\"}},\"getContract(bytes32)\":{\"params\":{\"_contractKey\":\"- The index to the contract address.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"requestTransferOwnership(address)\":{\"details\":\"Requests transferring ownership of the contract to a new account (`_newOwnerCandidate`). Can only be called by the current owner.\"},\"setContract(string,address)\":{\"params\":{\"_contractAddress\":\"- The associated contract address.\",\"_contractKey\":\"- New or existing contract key.\"}},\"setContracts(string[],address[])\":{\"params\":{\"_contractAddresses\":\"- The associated contract addresses.\",\"_contractKeys\":\"- New or existing contract keys.\"}}},\"title\":\"NftfiHub\",\"version\":1},\"userdoc\":{\"events\":{\"ContractUpdated(bytes32,address)\":{\"notice\":\"This event is fired whenever the admin registers a contract.\"}},\"kind\":\"user\",\"methods\":{\"getContract(bytes32)\":{\"notice\":\"This function can be called by anyone to lookup the contract address associated with the key.\"},\"setContract(string,address)\":{\"notice\":\"Set or update the contract address for the given key.\"},\"setContracts(string[],address[])\":{\"notice\":\"Set or update the contract addresses for the given keys.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NftfiHub.sol\":\"NftfiHub\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":900},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/NftfiHub.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.19;\\n\\nimport {INftfiHub} from \\\"./interfaces/INftfiHub.sol\\\";\\nimport {Ownable} from \\\"./utils/Ownable.sol\\\";\\nimport {ReentrancyGuard} from \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport {ContractKeyUtils} from \\\"./utils/ContractKeyUtils.sol\\\";\\n\\n/**\\n * @title  NftfiHub\\n * @author NFTfi\\n * @dev Registry for the contracts supported by NFTfi protocol.\\n */\\ncontract NftfiHub is Ownable, ReentrancyGuard, INftfiHub {\\n    /* ******* */\\n    /* STORAGE */\\n    /* ******* */\\n\\n    mapping(bytes32 => address) private contracts;\\n\\n    /* ****** */\\n    /* EVENTS */\\n    /* ****** */\\n\\n    /**\\n     * @notice This event is fired whenever the admin registers a contract.\\n     *\\n     * @param contractKey - Contract key e.g. bytes32('PERMITTED_NFTS').\\n     * @param contractAddress - Address of the contract.\\n     */\\n    event ContractUpdated(bytes32 indexed contractKey, address indexed contractAddress);\\n\\n    /* *********** */\\n    /* CONSTRUCTOR */\\n    /* *********** */\\n\\n    /**\\n     * @dev Initializes `contracts` with a batch of permitted contracts\\n     *\\n     * @param _admin - Initial admin of this contract.\\n     * @param _contractKeys - Initial contract keys.\\n     * @param _contractAddresses - Initial associated contract addresses.\\n     */\\n    constructor(address _admin, string[] memory _contractKeys, address[] memory _contractAddresses) Ownable(_admin) {\\n        _setContracts(_contractKeys, _contractAddresses);\\n    }\\n\\n    /* ********* */\\n    /* FUNCTIONS */\\n    /* ********* */\\n\\n    /**\\n     * @notice Set or update the contract address for the given key.\\n     * @param _contractKey - New or existing contract key.\\n     * @param _contractAddress - The associated contract address.\\n     */\\n    function setContract(string calldata _contractKey, address _contractAddress) external override onlyOwner {\\n        _setContract(_contractKey, _contractAddress);\\n    }\\n\\n    /**\\n     * @notice Set or update the contract addresses for the given keys.\\n     * @param _contractKeys - New or existing contract keys.\\n     * @param _contractAddresses - The associated contract addresses.\\n     */\\n    function setContracts(string[] memory _contractKeys, address[] memory _contractAddresses) external onlyOwner {\\n        _setContracts(_contractKeys, _contractAddresses);\\n    }\\n\\n    /**\\n     * @notice This function can be called by anyone to lookup the contract address associated with the key.\\n     * @param  _contractKey - The index to the contract address.\\n     */\\n    function getContract(bytes32 _contractKey) external view override returns (address) {\\n        return contracts[_contractKey];\\n    }\\n\\n    /**\\n     * @notice Set or update the contract address for the given key.\\n     * @param _contractKey - New or existing contract key.\\n     * @param _contractAddress - The associated contract address.\\n     */\\n    function _setContract(string memory _contractKey, address _contractAddress) internal {\\n        bytes32 key = ContractKeyUtils.getIdFromStringKey(_contractKey);\\n        contracts[key] = _contractAddress;\\n\\n        emit ContractUpdated(key, _contractAddress);\\n    }\\n\\n    /**\\n     * @notice Set or update the contract addresses for the given keys.\\n     * @param _contractKeys - New or existing contract key.\\n     * @param _contractAddresses - The associated contract address.\\n     */\\n    function _setContracts(string[] memory _contractKeys, address[] memory _contractAddresses) internal {\\n        // solhint-disable-next-line custom-errors\\n        require(_contractKeys.length == _contractAddresses.length, \\\"setContracts function information arity mismatch\\\");\\n\\n        for (uint256 i; i < _contractKeys.length; ++i) {\\n            _setContract(_contractKeys[i], _contractAddresses[i]);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2720020cf0c6e1ee8636296f680abc80a41dc1364c4d8af43b73dd32d13846c4\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/INftfiHub.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.19;\\n\\n/**\\n * @title INftfiHub\\n * @author NFTfi\\n * @dev NftfiHub interface\\n */\\ninterface INftfiHub {\\n    function setContract(string calldata _contractKey, address _contractAddress) external;\\n\\n    function getContract(bytes32 _contractKey) external view returns (address);\\n}\\n\",\"keccak256\":\"0x65320571d7049eefd4bfd6dcff48b752a4a01c56a23ae7acf0f3b7183b9b08db\",\"license\":\"BUSL-1.1\"},\"contracts/utils/ContractKeyUtils.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.19;\\n\\n/**\\n * @title ContractKeyUtils\\n * @author NFTfi\\n * @dev Common library for contract key utils\\n */\\nlibrary ContractKeyUtils {\\n    /**\\n     * @notice Returns the bytes32 representation of a string\\n     * @param _key the string key\\n     * @return id bytes32 representation\\n     */\\n    function getIdFromStringKey(string memory _key) public pure returns (bytes32 id) {\\n        // solhint-disable-next-line custom-errors\\n        require(bytes(_key).length <= 32, \\\"invalid key\\\");\\n\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            id := mload(add(_key, 32))\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x132d85863f84cf1aa7061ea3ef35a6eafdcc56c6be22efe4370d98939e3cd744\",\"license\":\"BUSL-1.1\"},\"contracts/utils/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity 0.8.19;\\n\\nimport {Context} from \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n *\\n * Modified version from openzeppelin/contracts/access/Ownable.sol that allows to\\n * initialize the owner using a parameter in the constructor\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    address private _ownerCandidate;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        // solhint-disable-next-line custom-errors\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor(address _initialOwner) {\\n        _setOwner(_initialOwner);\\n    }\\n\\n    /**\\n     * @dev Requests transferring ownership of the contract to a new account (`_newOwnerCandidate`).\\n     * Can only be called by the current owner.\\n     */\\n    function requestTransferOwnership(address _newOwnerCandidate) public virtual onlyOwner {\\n        // solhint-disable-next-line custom-errors\\n        require(_newOwnerCandidate != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _ownerCandidate = _newOwnerCandidate;\\n    }\\n\\n    function acceptTransferOwnership() public virtual {\\n        // solhint-disable-next-line custom-errors\\n        require(_ownerCandidate == _msgSender(), \\\"Ownable: not owner candidate\\\");\\n        _setOwner(_ownerCandidate);\\n        delete _ownerCandidate;\\n    }\\n\\n    function cancelTransferOwnership() public virtual onlyOwner {\\n        delete _ownerCandidate;\\n    }\\n\\n    function rejectTransferOwnership() public virtual {\\n        // solhint-disable-next-line custom-errors\\n        require(_ownerCandidate == _msgSender(), \\\"Ownable: not owner candidate\\\");\\n        delete _ownerCandidate;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Sets the owner.\\n     */\\n    function _setOwner(address _newOwner) internal {\\n        address oldOwner = _owner;\\n        _owner = _newOwner;\\n        emit OwnershipTransferred(oldOwner, _newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x4f1dc29ae64fcd354c09865ae56d8a3612541ebfc9db9b87b7af6f18ca36cf65\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100c557806392fede00146100ee5780639d6fa618146100f6578063e16c7d981461010957600080fd5b80633f0ed0df1461008d5780635f992fdd146100a25780637b371107146100aa5780637ca9e0c4146100b2575b600080fd5b6100a061009b3660046106ca565b610132565b005b6100a06101d7565b6100a0610250565b6100a06100c0366004610828565b6102bf565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100a0610327565b6100a0610104366004610951565b610381565b6100d2610117366004610973565b6000908152600360205260409020546001600160a01b031690565b6000546001600160a01b031633146101915760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101d283838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250859250610486915050565b505050565b6001546001600160a01b031633146102315760405162461bcd60e51b815260206004820152601c60248201527f4f776e61626c653a206e6f74206f776e65722063616e646964617465000000006044820152606401610188565b6001805473ffffffffffffffffffffffffffffffffffffffff19169055565b6001546001600160a01b031633146102aa5760405162461bcd60e51b815260206004820152601c60248201527f4f776e61626c653a206e6f74206f776e65722063616e646964617465000000006044820152606401610188565b600154610231906001600160a01b0316610582565b6000546001600160a01b031633146103195760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610188565b61032382826105df565b5050565b6000546001600160a01b031633146102315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610188565b6000546001600160a01b031633146103db5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610188565b6001600160a01b0381166104575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610188565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6040517ff99a8ffb00000000000000000000000000000000000000000000000000000000815260009073__$b0ae3f603fa3e13f3b829da0b88d39db57$__9063f99a8ffb906104d990869060040161098c565b602060405180830381865af41580156104f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051a91906109da565b600081815260036020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03871690811790915590519293509183917fd45de243cd15102b320d0d75eb12a34864595b07f8853b6b7d487946b292463091a3505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80518251146106565760405162461bcd60e51b815260206004820152603060248201527f736574436f6e7472616374732066756e6374696f6e20696e666f726d6174696f60448201527f6e206172697479206d69736d61746368000000000000000000000000000000006064820152608401610188565b60005b82518110156101d25761069e838281518110610677576106776109f3565b6020026020010151838381518110610691576106916109f3565b6020026020010151610486565b6106a781610a09565b9050610659565b80356001600160a01b03811681146106c557600080fd5b919050565b6000806000604084860312156106df57600080fd5b833567ffffffffffffffff808211156106f757600080fd5b818601915086601f83011261070b57600080fd5b81358181111561071a57600080fd5b87602082850101111561072c57600080fd5b60209283019550935061074291860190506106ae565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561078a5761078a61074b565b604052919050565b600067ffffffffffffffff8211156107ac576107ac61074b565b5060051b60200190565b600082601f8301126107c757600080fd5b813560206107dc6107d783610792565b610761565b82815260059290921b840181019181810190868411156107fb57600080fd5b8286015b8481101561081d57610810816106ae565b83529183019183016107ff565b509695505050505050565b600080604080848603121561083c57600080fd5b833567ffffffffffffffff8082111561085457600080fd5b8186019150601f878184011261086957600080fd5b823560206108796107d783610792565b82815260059290921b8501810191818101908b84111561089857600080fd5b8287015b84811015610921578035878111156108b45760008081fd5b8801603f81018e136108c65760008081fd5b84810135888111156108da576108da61074b565b6108eb818901601f19168701610761565b8181528f8c8385010111156109005760008081fd5b818c840188830137600091810187019190915284525091830191830161089c565b50985050880135945050508083111561093957600080fd5b5050610947858286016107b6565b9150509250929050565b60006020828403121561096357600080fd5b61096c826106ae565b9392505050565b60006020828403121561098557600080fd5b5035919050565b600060208083528351808285015260005b818110156109b95785810183015185820160400152820161099d565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156109ec57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060018201610a2957634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c6343000813000a",
  "libraries": {
    "ContractKeyUtils": "0x43cD0b93B7cDF165643D362aC74CED9Ec303Ea33"
  },
  "devdoc": {
    "author": "NFTfi",
    "details": "Registry for the contracts supported by NFTfi protocol.",
    "events": {
      "ContractUpdated(bytes32,address)": {
        "params": {
          "contractAddress": "- Address of the contract.",
          "contractKey": "- Contract key e.g. bytes32('PERMITTED_NFTS')."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes `contracts` with a batch of permitted contracts",
        "params": {
          "_admin": "- Initial admin of this contract.",
          "_contractAddresses": "- Initial associated contract addresses.",
          "_contractKeys": "- Initial contract keys."
        }
      },
      "getContract(bytes32)": {
        "params": {
          "_contractKey": "- The index to the contract address."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "requestTransferOwnership(address)": {
        "details": "Requests transferring ownership of the contract to a new account (`_newOwnerCandidate`). Can only be called by the current owner."
      },
      "setContract(string,address)": {
        "params": {
          "_contractAddress": "- The associated contract address.",
          "_contractKey": "- New or existing contract key."
        }
      },
      "setContracts(string[],address[])": {
        "params": {
          "_contractAddresses": "- The associated contract addresses.",
          "_contractKeys": "- New or existing contract keys."
        }
      }
    },
    "title": "NftfiHub",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ContractUpdated(bytes32,address)": {
        "notice": "This event is fired whenever the admin registers a contract."
      }
    },
    "kind": "user",
    "methods": {
      "getContract(bytes32)": {
        "notice": "This function can be called by anyone to lookup the contract address associated with the key."
      },
      "setContract(string,address)": {
        "notice": "Set or update the contract address for the given key."
      },
      "setContracts(string[],address[])": {
        "notice": "Set or update the contract addresses for the given keys."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 25956,
        "contract": "contracts/NftfiHub.sol:NftfiHub",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 25958,
        "contract": "contracts/NftfiHub.sol:NftfiHub",
        "label": "_ownerCandidate",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 945,
        "contract": "contracts/NftfiHub.sol:NftfiHub",
        "label": "_status",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 9443,
        "contract": "contracts/NftfiHub.sol:NftfiHub",
        "label": "contracts",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}